name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: elephantTest
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '16'
        id: java

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and Test
        run: |
          mvn --version
          mvn -B verify

  dockerize-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Dockerize and Push
        run: |
          export IMAGE_NAME=elephant-app
          docker build --platform=$TARGET_PLATFORM -t $IMAGE_NAME .
          docker tag $IMAGE_NAME $REMOTE_IMAGE_NAME:latest
          docker push $REMOTE_IMAGE_NAME:latest
        env:
          TARGET_PLATFORM: linux/amd64  # Adjust as needed
          REMOTE_IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/elephant-app
